plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.vaslufi.castles"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    composeOptions {
        // TODO use refreshVersions' versionFor() function instead of the hardcoded version number
        kotlinCompilerExtensionVersion = "1.2.0-alpha03"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

configurations {
    ktlint
}

dependencies {
    implementation Libs.material
    implementation Libs.appcompat
    implementation Libs.coil_compose
    implementation Libs.converter_moshi
    implementation Libs.core_ktx
    implementation Libs.hilt_android
    implementation Libs.kotlin_stdlib
    implementation Libs.lifecycle_viewmodel_ktx
    implementation Libs.navigation_fragment_ktx
    implementation Libs.navigation_ui_ktx
    implementation Libs.retrofit
    implementation Libs.timber
    implementation Libs.ui_tooling

    kapt Libs.hilt_android_compiler

    testImplementation Libs.junit_junit
    testImplementation Libs.junit_jupiter_engine
    testImplementation Libs.kotest_assertions_core
    testImplementation Libs.kotest_runner_junit5
    testImplementation Libs.kotlinx_coroutines_test
    testImplementation Libs.mockk

    androidTestImplementation Libs.androidx_test_ext_junit
    androidTestImplementation Libs.espresso_core
    androidTestImplementation Libs.ui_test_junit4

    ktlint Libs.ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt", "--reporter=checkstyle,output=${buildDir}/reports/ktlint.xml"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt", "--reporter=checkstyle,output=${buildDir}/reports/ktlint.xml"
}

// Android Studio needs to be restarted after running this task
task addKtLintStyle(type: JavaExec, group: "formatting") {
    description = "Adds The KtLint Style To Your IDE"
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--android", "applyToIDEA", "-y"
    // Point to the root directory because this task needs access to the .idea directory
    workingDir(getRootDir())
}
